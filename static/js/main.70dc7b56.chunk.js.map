{"version":3,"sources":["serviceWorker.js","component/template/navigasi/Headnav.js","component/template/navigasi/Navbar.js","component/home/CardProduct.js","component/home/BtnCard.js","view/VHome.js","Alamat.jsx","Nama.jsx","App.js","index.js","assets/img/product-1.png"],"names":["Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","Headnav","state","isOpen","toggleCollapse","setState","dark","expand","id","className","onClick","this","navbar","right","to","Component","Navbar","icon","left","nav","caret","href","type","placeholder","aria-label","far","basic","CardProduct","src","require","waves","BtnCard","props","VHome","Alamat","Nama","App","path","exact","jQuery","$","global","ReactDOM","render","basename","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.70dc7b56.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse } from \"mdbreact\";\nimport '../../../style/Headnav.css';\n\nclass Headnav extends Component {\nstate = {\n  isOpen: false\n};\n\ntoggleCollapse = () => {\n  this.setState({ isOpen: !this.state.isOpen });\n}\n\nrender() {\n  return (\n      <MDBNavbar dark expand=\"md\" id=\"nav\">\n        <MDBNavbarBrand>\n          <strong className=\"text-dark\">BabaStore</strong>\n        </MDBNavbarBrand>\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n          \n          <MDBNavbarNav right>\n            <MDBNavItem>\n              <MDBNavLink className=\"waves-effect waves-light text-dark\" to=\"login\">\n                Login\n              </MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink className=\"waves-effect waves-light text-dark\" to=\"#!\">\n                Register\n              </MDBNavLink>\n            </MDBNavItem>\n          </MDBNavbarNav>\n        </MDBCollapse>\n      </MDBNavbar>\n    );\n  }\n}\n\nexport default Headnav;","import React, { Component } from \"react\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\nimport '../../../style/Navbar.css';\n\nclass Navbar extends Component {\nstate = {\n  isOpen: false\n};\n\ntoggleCollapse = () => {\n  this.setState({ isOpen: !this.state.isOpen });\n}\n\nrender() {\n  return (\n      <MDBNavbar className=\"bg-success\" dark expand=\"md\">\n        <MDBNavbarBrand>\n          <MDBNavLink to=\"/\">\n            <strong className=\"white-text\"><MDBIcon className=\"brand\" icon=\"home\" /></strong>\n          </MDBNavLink>\n        </MDBNavbarBrand>\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n          <MDBNavbarNav left>\n            <MDBNavItem>\n              <MDBDropdown>\n                <MDBDropdownToggle nav caret>\n                  <div className=\"d-none d-md-inline\">Kategori</div>\n                </MDBDropdownToggle>\n                <MDBDropdownMenu className=\"dropdown-default mt-3\">\n                  <MDBDropdownItem href=\"#!\">Pakaian</MDBDropdownItem>\n                  <MDBDropdownItem href=\"#!\">Elektronik</MDBDropdownItem>\n                  <MDBDropdownItem href=\"#!\">Furniture</MDBDropdownItem>\n                  <MDBDropdownItem href=\"#!\">Aksesoris</MDBDropdownItem>\n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBNavItem>\n            <MDBNavItem id=\"search\">\n              <MDBNavLink to=\"#!\">Search</MDBNavLink>\n              <div className=\"search\"><input className=\"form-control\" type=\"text\" placeholder=\"\" aria-label=\"Search\" /></div>\n            </MDBNavItem>\n          </MDBNavbarNav>\n          <MDBNavbarNav right>\n            <MDBNavItem>\n              <MDBNavLink className=\"waves-effect waves-light text-icon\" to=\"Nama\">\n                <MDBIcon far icon=\"heart\" />\n                <div>Favorite</div>\n              </MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink className=\"waves-effect waves-light text-icon\" to=\"Alamat\">\n                <MDBIcon far icon=\"bell\" />\n                <div>Notification</div>\n              </MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink className=\"waves-effect waves-light text-icon\" to=\"/\">\n                <MDBIcon icon=\"shopping-basket\" />\n                <div>My Cart</div>\n              </MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBDropdown>\n                <MDBDropdownToggle nav caret id=\"user\" className=\"ml-2\" >\n                  <MDBIcon icon=\"user\" />\n                </MDBDropdownToggle>\n                <MDBDropdownMenu right basic className=\"mt-3\">\n                  <MDBDropdownItem href=\"#!\">Action</MDBDropdownItem>\n                  <MDBDropdownItem href=\"#!\">Another Action</MDBDropdownItem>\n                  <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\n                  <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBNavItem>\n          </MDBNavbarNav>\n        </MDBCollapse>\n      </MDBNavbar>\n    );\n  }\n}\n\nexport default Navbar;","import React from 'react';\nimport '../../style/CardProduct.css';\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardText } from 'mdbreact';\n\nconst CardProduct = () => {\n  return (\n      <MDBCard>\n        <MDBCardImage id=\"img-card\" className=\"img-fluid\" src={require('../../assets/img/product-1.png')} waves />\n        <MDBCardBody>\n          \t<MDBCardText className=\"\">\n            <b>I-PHONE</b>\n            <br/>\n            Harga: Rp.2.000.000-\n          \t</MDBCardText>\n        </MDBCardBody>\n      </MDBCard>\n  )\n}\n\nexport default CardProduct;","import React from 'react';\nimport { MDBIcon } from 'mdbreact';\n\nconst BtnCard = (props) => {\n  return (\n    <div className=\"btn-icon\">\n      \t<span className=\"icon\"><MDBIcon icon=\"shopping-basket\" /></span>\n      \t<span className=\"icon\"><MDBIcon far icon=\"heart\" /></span>\n        <span className=\"icon\"><MDBIcon far icon=\"eye\" /></span>\n     </div>\n  )\n}\n\nexport default BtnCard;","import React, { Component } from 'react';\nimport CardProduct from '../component/home/CardProduct';\nimport BtnCard from '../component/home/BtnCard';\n\nclass VHome extends Component {\n\n\nconstructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n// super(props)\n\n\t// this.state = {\n\t\t// name:''\n\t// }\n\n\t// this.onSubmit = this.onSubmit.bind(this);\n\t// this.handleChange = this.handleChange.bind(this);\n// }\n\n  render() {\n    return (\n      <div className=\"col-md-12 pl-5 pr-5 pt-3\">\n        <div className=\"row\">\n  \t\t\t\t<div className=\"col-md-2 p-2\" id=\"card\">\n\t\t            <CardProduct />\n\t\t            <BtnCard />\n    \t\t\t</div>\n  \t\t\t\t<div className=\"col-md-2 p-2\" id=\"card\">\n\t\t            <CardProduct />\n\t\t            <BtnCard />\n    \t\t\t</div>\n  \t\t\t\t<div className=\"col-md-2 p-2\" id=\"card\">\n\t\t            <CardProduct />\n\t\t            <BtnCard />\n    \t\t\t</div>\n  \t\t\t\t<div className=\"col-md-2 p-2\" id=\"card\">\n\t\t            <CardProduct />\n\t\t            <BtnCard />\n    \t\t\t</div>\n  \t\t\t\t<div className=\"col-md-2 p-2\" id=\"card\">\n\t\t            <CardProduct />\n\t\t            <BtnCard />\n    \t\t\t</div>\n  \t\t\t\t<div className=\"col-md-2 p-2\" id=\"card\">\n\t\t            <CardProduct />\n\t\t            <BtnCard />\n    \t\t\t</div>\n  \t\t\t\t<div className=\"col-md-2 p-2\" id=\"card\">\n\t\t            <CardProduct />\n\t\t            <BtnCard />\n    \t\t\t</div>\n  \t\t\t\t<div className=\"col-md-2 p-2\" id=\"card\">\n\t\t            <CardProduct />\n\t\t            <BtnCard />\n    \t\t\t</div>\n  \t\t\t\t<div className=\"col-md-2 p-2\" id=\"card\">\n\t\t            <CardProduct />\n\t\t            <BtnCard />\n    \t\t\t</div>\n  \t\t\t\t<div className=\"col-md-2 p-2\" id=\"card\">\n\t\t            <CardProduct />\n\t\t            <BtnCard />\n    \t\t\t</div>\n  \t\t\t\t<div className=\"col-md-2 p-2\" id=\"card\">\n\t\t            <CardProduct />\n\t\t            <BtnCard />\n    \t\t\t</div>\n  \t\t\t\t<div className=\"col-md-2 p-2\" id=\"card\">\n\t\t            <CardProduct />\n\t\t            <BtnCard />\n    \t\t\t</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VHome;\n","import React, { Component } from 'react';\n\nclass Alamat extends Component {\n\n// super(props);\n\n\t// this.state = {\n\t\t// name:''\n\t// }\n\n\t// this.onSubmit = this.onSubmit.bind(this);\n\t// this.handleChange = this.handleChange.bind(this);\n// }\n\n  render() {\n    return (\n      <div>\n      \t<h1>Alamat</h1>\n      </div>\n    );\n  }\n}\n\nexport default Alamat;","import React, { Component } from 'react';\n\nclass Nama extends Component {\n\n// super(props);\n\n\t// this.state = {\n\t\t// name:''\n\t// }\n\n\t// this.onSubmit = this.onSubmit.bind(this);\n\t// this.handleChange = this.handleChange.bind(this);\n// }\n\n  render() {\n    return (\n      <div>\n      \t<h1>Nama</h1>\n      </div>\n    );\n  }\n}\n\nexport default Nama;","import React, { Component } from 'react';\nimport Headnav from './component/template/navigasi/Headnav';\nimport Navbar from './component/template/navigasi/Navbar';\n// import VCart from './view/VCart';\n// import VLogin from './view/VLogin';\nimport VHome from './view/VHome.js';\n// import Home from './Home';\nimport Alamat from './Alamat';\nimport Nama from './Nama';\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Headnav />\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact ><VHome /></Route>\n          <Route path=\"/Nama\"><Nama /></Route>\n          <Route path=\"/Alamat\"><Alamat /></Route>\n        </Switch>\n        {/*<Switch>*/}\n          {/*<Route path=\"/\" exact ><VHome /></Route>*/}\n          {/*<Route path=\"/mycart\"><VCart /></Route>*/}\n          {/*<Route path=\"/login\"><VLogin/></Route>*/}\n        {/*// </Switch>*/}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport { HashRouter } from \"react-router-dom\";\nimport $ from 'jquery';\nwindow.jQuery = $;\nwindow.$ = $;\nglobal.jQuery = $;\n\n\nReactDOM.render(\n\t<HashRouter basename=\"/\">\n\t\t<App />\n\t</HashRouter>\n\t, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n","module.exports = __webpack_public_path__ + \"static/media/product-1.d63d9eff.png\";"],"sourceRoot":""}